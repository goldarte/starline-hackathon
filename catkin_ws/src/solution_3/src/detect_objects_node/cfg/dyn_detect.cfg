#!/usr/bin/env python
PACKAGE = "solution_3"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("detect_tl",   bool_t, 0, "Detect traffic light frame", False)
gen.add("light_area",double_t, 0, "Traffic light min detected area", 0.1, 0.0, 0.3)
gen.add("stop_area", double_t, 0, "Stop sign min detected area", 0.1, 0.0, 0.3)
gen.add("red_area",  double_t, 0, "Stop sign min detected area", 0.02, 0.0, 0.1)
gen.add("c_quality",    int_t, 0, "Circle quality", 23, 0, 100)
gen.add("c_min_R",      int_t, 0, "Circle min radius", 10, 0, 255)
gen.add("c_max_R",      int_t, 0, "Circle max radius", 255, 0, 255)
gen.add("c_min_dist",   int_t, 0, "Min distance between circles", 5, 0, 255)
gen.add("mask_iter",    int_t, 0, "Mask dilatation operations", 5, 0, 50)
gen.add("mask_ks",      int_t, 0, "Mask kernel size", 3, 0, 20)
gen.add("red_h_l",      int_t, 0, "Hue threshold low value", 0, 0, 255)
gen.add("red_h_h",      int_t, 0, "Hue threshold high value", 30, 0, 255)
gen.add("red_s_l",      int_t, 0, "Saturation threshold low value", 22, 0, 255)
gen.add("red_s_h",      int_t, 0, "Saturation threshold high value", 223, 0, 255)
gen.add("red_l_l",      int_t, 0, "Lightness threshold low value", 106, 0, 255)
gen.add("red_l_h",      int_t, 0, "Lightness threshold high value", 255, 0, 255)

exit(gen.generate(PACKAGE, "detect_objects_node", "dyn_detect_"))